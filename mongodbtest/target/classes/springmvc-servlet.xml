<?xml version="1.0" encoding="UTF-8"?>  
<beans  
        xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:mvc="http://www.springframework.org/schema/mvc"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd">  
  
    <!--只在springmvc容器中配置controller的扫描-->  
    <context:component-scan base-package="com.xing.mongodbtest" use-default-filters="false">  
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
    </context:component-scan>  
  
    <!--这个是SpringMVC必须要配置的，因为它声明了@RequestMapping、@RequestBody、@ResponseBody等。并且，该配置默认加载很多的参数绑定方法，比如json转换解析器等。-->  
    <mvc:annotation-driven/>  
  
    <!-- 将在Controller返回的ModelAndView,加上目录前缀/WEB-INF/views/, 文件名称后缀.jsp -->  
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
        <!--<beans:property name="prefix" value="/WEB-INF/views/"/>-->  
        <property name="prefix" value="/webpage/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean>  
  
    <!-- 对静态资源文件的访问-->  
    <!--<mvc:resources mapping="/images/**" location="/WEB-INF/images/" cache-period="31556926"/>-->  
    <!--<mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="31556926"/>-->  
    <!--<mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period="31556926"/>-->  
  
    <!--由于父子容器的关系,@controller注解扫描配置在mvc中,所以启动shiro注解也需要在子容器中引用一次-->  
    <!-- <import resource="shiro-context.xml"/>   -->
  
</beans> 